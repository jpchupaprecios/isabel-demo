{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import Header from'./components/Header';import HomePage from'./pages/HomePage';import ProductDetail from'./pages/ProductDetail';import CategoryPage from'./pages/CategoryPage';import{mockAPI}from'./services/mockAPI';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{const[productsData,categoriesData]=await Promise.all([mockAPI.getProducts(),mockAPI.getCategories()]);setProducts(productsData);setCategories(categoriesData);}catch(error){console.error('Error fetching data:',error);}finally{setLoading(false);}};fetchData();},[]);if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Cargando productos...\"})]});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{categories:categories}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{products:products,categories:categories})}),/*#__PURE__*/_jsx(Route,{path:\"/product/:id\",element:/*#__PURE__*/_jsx(ProductDetail,{products:products})}),/*#__PURE__*/_jsx(Route,{path:\"/category/:categoryId\",element:/*#__PURE__*/_jsx(CategoryPage,{products:products,categories:categories})})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Header","HomePage","ProductDetail","CategoryPage","mockAPI","jsx","_jsx","jsxs","_jsxs","App","products","setProducts","categories","setCategories","loading","setLoading","fetchData","productsData","categoriesData","Promise","all","getProducts","getCategories","error","console","className","children","path","element"],"sources":["/home/jotapey/isabel/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport ProductDetail from './pages/ProductDetail';\nimport CategoryPage from './pages/CategoryPage';\nimport { mockAPI } from './services/mockAPI';\nimport './App.css';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [productsData, categoriesData] = await Promise.all([\n          mockAPI.getProducts(),\n          mockAPI.getCategories()\n        ]);\n        setProducts(productsData);\n        setCategories(categoriesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Cargando productos...</p>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header categories={categories} />\n        <main>\n          <Routes>\n            <Route \n              path=\"/\" \n              element={<HomePage products={products} categories={categories} />} \n            />\n            <Route \n              path=\"/product/:id\" \n              element={<ProductDetail products={products} />} \n            />\n            <Route \n              path=\"/category/:categoryId\" \n              element={<CategoryPage products={products} categories={categories} />} \n            />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,aAAa,KAAM,uBAAuB,CACjD,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAC/C,OAASC,OAAO,KAAQ,oBAAoB,CAC5C,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAACC,YAAY,CAAEC,cAAc,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACvDhB,OAAO,CAACiB,WAAW,CAAC,CAAC,CACrBjB,OAAO,CAACkB,aAAa,CAAC,CAAC,CACxB,CAAC,CACFX,WAAW,CAACM,YAAY,CAAC,CACzBJ,aAAa,CAACK,cAAc,CAAC,CAC/B,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,OAAO,CAAE,CACX,mBACEN,KAAA,QAAKiB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpB,IAAA,QAAKmB,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCnB,IAAA,MAAAoB,QAAA,CAAG,uBAAqB,CAAG,CAAC,EACzB,CAAC,CAEV,CAEA,mBACEpB,IAAA,CAACT,MAAM,EAAA6B,QAAA,cACLlB,KAAA,QAAKiB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBpB,IAAA,CAACN,MAAM,EAACY,UAAU,CAAEA,UAAW,CAAE,CAAC,cAClCN,IAAA,SAAAoB,QAAA,cACElB,KAAA,CAACV,MAAM,EAAA4B,QAAA,eACLpB,IAAA,CAACP,KAAK,EACJ4B,IAAI,CAAC,GAAG,CACRC,OAAO,cAAEtB,IAAA,CAACL,QAAQ,EAACS,QAAQ,CAAEA,QAAS,CAACE,UAAU,CAAEA,UAAW,CAAE,CAAE,CACnE,CAAC,cACFN,IAAA,CAACP,KAAK,EACJ4B,IAAI,CAAC,cAAc,CACnBC,OAAO,cAAEtB,IAAA,CAACJ,aAAa,EAACQ,QAAQ,CAAEA,QAAS,CAAE,CAAE,CAChD,CAAC,cACFJ,IAAA,CAACP,KAAK,EACJ4B,IAAI,CAAC,uBAAuB,CAC5BC,OAAO,cAAEtB,IAAA,CAACH,YAAY,EAACO,QAAQ,CAAEA,QAAS,CAACE,UAAU,CAAEA,UAAW,CAAE,CAAE,CACvE,CAAC,EACI,CAAC,CACL,CAAC,EACJ,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}